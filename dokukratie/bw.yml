name: bw
description: |
  Kleine und Große Anfragen und ihre Antworten aus der Parlamentsdokumentation
  des Baden-Württembergischen Landtags. Diese Sammlung ist Teil des Projekts
  "dokukratie" von FragDenStaat, das versucht, alle Drucksachen aus allen 16
  Landesparlamenten einzusammeln (früher bekannt als "kleineanfragen.de")
title: "[BW] Parlamentsdokumentation (PARLIS) Baden-Württemberg"
stealthy: true
prefix: de-dok-bw

publisher:
  type: parliament
  name: Landtag von Baden-Württemberg
  url: https://www.landtag-bw.de
  country: de
  jurisdiction:
    id: bw
    name: Baden-Württemberg

resources:
  - name: archive.json
    url: https://s3.investigativedata.org/dokukratie/bw/archive.json
    mime_type: application/json+archive

scraper:
  name: portala
  url: https://parlis.landtag-bw.de/parlis/

document_types:
  minor_interpellation: Kleine Anfrage
  major_interpellation: Große Anfrage

pipeline:

  # emit scrape criteria
  init:
    method: dokukratie.operations:init
    params:
      url: https://parlis.landtag-bw.de/parlis/
      dateformat: "%d.%m.%Y"
      legislative_terms: 17  # earliest: 9
      document_types:
        - minor_interpellation
        # - major_interpellation
    handle:
      pass: fetch

  # initialize session for cookie & referer
  fetch:
    method: memorious_extended.operations:fetch
    handle:
      pass: search

  # post request to actual search
  search:
    method: dokukratie.scrapers.portala:search
    params:
      url: https://parlis.landtag-bw.de/parlis/browse.tt.json
      query_template: dokukratie/scrapers/portala.query.bw.json
    handle:
      pass: parse_json


  # filter json data
  parse_json:
    method: memorious_extended.operations:parse_jq
    params:
      pattern: '{item_count: .item_count, report_id: .report_id}'
    handle:
      pass: fetch_results

  # fetch response based on `report_id`
  fetch_results:
    method: dokukratie.scrapers.portala:fetch_results
    params:
      url: https://parlis.landtag-bw.de/parlis/report.tt.html
    handle:
      pass: parse_results

  parse_results:
    method: memorious_extended.operations:parse
    params:
      items: './/div[contains(@class, "efxRecordRepeater")]'
      include_paths:
        - './/a[@class="fundstellenLinks"]'
      meta:
        title: './/a[@class="efxZoomShort-Vorgang"]'
        originators_raw: './/dl/dt[contains(text(), "Initiative")]/following-sibling::dd[1]/text()'
        interpellation_raw: './/a[@class="fundstellenLinks"]'
        procedure_id: './/dl/dt[contains(text(), "Vorgangs-ID")]/following-sibling::dd[1]/text()'
      skip_incremental:
        key:
          data: procedure_id
        target:
          stage: store
    handle:
      fetch: download  # yield pdf urls and detail metadata

  download:
    method: memorious_extended.operations:fetch
    handle:
      pass: extract

  extract:
    method: memorious_extended.operations:regex_groups
    params:
      interpellation_raw:
        - .*(Schriftliche|Kleine)\s+Anfrage(.*)?\s+(?P<interpellation_date>\d{2}\.\d{2}\.\d{4})\s+Drucksache\s+(?P<interpellation_reference>\d{1,2}\/\d+).*
        - .*(Schriftliche|Kleine)\s+Anfrage(.*)?\s+(?P<published_at>\d{2}\.\d{2}\.\d{4})\s+und\s+Antwort\s+(?P<answerers>.*)\s+Drucksache\s+(?P<reference>\d{1,2}\/\d+).*
        - .*(Schriftliche|Kleine)\s+Anfrage\s+(?P<originators_raw>.*)?(\s+)?(?P<published_at>\d{2}\.\d{2}\.\d{4})\s+und\s+Antwort\s+Drucksache\s+(?P<reference>\d{1,2}\/\d+).*
      originators_raw:
        store_as: originators
        split: ","
        patterns:
          - (?P<name>.*)\s+\((?P<party>.*)\)
          - (?P<name>.*)\s+(?P<party>[A-ZÄÖÜ]+)  # Weichert GRÜNE
    handle:
      pass: clean

  # clean and validate metadata
  clean:
    method: dokukratie.operations:clean
    params:
      defaults:
        answerers: Landesregierung
      values:
        foreign_id: "{publisher[jurisdiction][id]}-{reference}"
      required:
        - legislative_term
        - document_type
        - reference
        - foreign_id
        - title
        - originators
        - answerers
        - published_at
        - publisher
      typing:
        ignore:
          - modified_at
          - retrieved_at
          - reference
          - interpellation_reference
        dateparserkwargs:
          dayfirst: true
      drop:
        - page
        - formdata
    handle:
      pass: store

  store:
    method: memorious_extended.operations:store
