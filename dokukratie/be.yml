name: be
description: PARDOK Berlin

publisher:
  type: parliament
  name: Abgeordnetenhaus Berlin
  url: https://parlament-berlin.de
  jurisdiction:
    id: be
    name: Berlin

scraper:
  name: portala
  version: 1.0.0
  url: https://pardok.parlament-berlin.de/portala/start.tt.html

document_types:
  written_interpellation: Schriftliche Anfrage

pipeline:

  # emit scrape criteria
  init:
    method: dokukratie.scrapers.operations:init
    params:
      legislative_terms: 18  # earliest: 11
      document_types: minor_interpellation
      url: https://pardok.parlament-berlin.de/portala/browse.tt.html
      dateformat: "%Y %m %d"
    handle:
      pass: fetch

  # initialize session for cookie & referer
  fetch:
    method: dokukratie.scrapers.operations:fetch
    handle:
      pass: search

  search:
    method: dokukratie.scrapers.portala:search
    params:
      url: https://pardok.parlament-berlin.de/portala/browse.tt.json
      query_template: dokukratie/scrapers/portala.query.json
    handle:
      pass: parse_json

  parse_json:
    method: dokukratie.scrapers.operations:parse_json
    params:
      report_id: report_id
      item_count: item_count
    handle:
      pass: fetch_results

  fetch_results:
    method: dokukratie.scrapers.portala:fetch_results
    params:
      url: https://pardok.parlament-berlin.de/portala/report.tt.html
      chunksize: 50
    handle:
      pass: parse_results

  parse_results:
    method: dokukratie.scrapers.portala:parse_results
    params:
      item: './/div[contains(@class, "efxRecordRepeater")]'
      download_url: './/span[@class="h6"]/a/@href'
      meta:
        # reference, originators, etc..: store the full paragraph for each field,
        # extract the granular information later in `clean` stage
        title: './/h3/span'
        reference: './/span[@class="h6"]'
        originators: './/span[@class="h6"]'
        answerers: ".//div[contains(@id, 'collapse-details')]//a[contains(text(), 'Drucksache')]/.."
        published_at: ".//div[contains(@id, 'collapse-details')]//a[contains(text(), 'Drucksache')]/.."
        source_url: './/a[contains(@class, "js-copy-link")]/@data-link'
    handle:
      download: download  # yield pdf urls and detail metadata

  download:
    method: dokukratie.scrapers.operations:fetch
    handle:
      pass: clean

  # extract & cleanup metadata
  clean:
    method: dokukratie.scrapers.operations:clean
    params:
      extractors:
        published_at: \d{2}\.\d{2}\.\d{4}
      dateparser:
        dayfirst: true
    handle:
      pass: store

  store:
    method: dokukratie.scrapers.operations:store
